[gd_scene load_steps=16 format=2]

[ext_resource path="res://assets/Circuit/Arrow.glb" type="PackedScene" id=1]
[ext_resource path="res://src/circuit/ArrowSingle.gd" type="Script" id=2]

[sub_resource type="VisualShaderNodeScalarUniform" id=1]
uniform_name = "timeDelay"

[sub_resource type="VisualShaderNodeScalarOp" id=2]
default_input_values = [ 0, 0.0, 1, 1.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=3]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=4]
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 1

[sub_resource type="VisualShaderNodeColorConstant" id=5]
constant = Color( 0.0745098, 0.956863, 1, 1 )

[sub_resource type="VisualShaderNodeFresnel" id=6]
default_input_values = [ 2, false, 3, 0.5 ]

[sub_resource type="VisualShaderNodeScalarFunc" id=7]
function = 0

[sub_resource type="VisualShaderNodeInput" id=8]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=9]
default_input_values = [ 0, 0.0, 1, 4.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=10]
default_input_values = [ 0, 1.0, 1, 0.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=11]

[sub_resource type="VisualShader" id=12]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform float timeDelay;



void vertex() {
// Output:0

}

void fragment() {
// Color:2
	vec3 n_out2p0 = vec3(0.074510, 0.956863, 1.000000);
	float n_out2p1 = 1.000000;

// Fresnel:3
	float n_in3p3 = 0.50000;
	float n_out3p0 = pow(1.0 - clamp(dot(NORMAL, VIEW), 0.0, 1.0), n_in3p3);

// ScalarUniform:10
	float n_out10p0 = timeDelay;

// Input:5
	float n_out5p0 = TIME;

// ScalarOp:9
	float n_out9p0 = n_out10p0 + n_out5p0;

// ScalarOp:6
	float n_in6p1 = 4.00000;
	float n_out6p0 = n_out9p0 * n_in6p1;

// ScalarFunc:4
	float n_out4p0 = sin(n_out6p0);

// ScalarOp:12
	float n_in12p1 = 1.00000;
	float n_out12p0 = n_out4p0 + n_in12p1;

// ScalarOp:13
	float n_in13p1 = 2.00000;
	float n_out13p0 = n_out12p0 / n_in13p1;

// ScalarOp:14
	float n_in14p1 = 0.50000;
	float n_out14p0 = n_out13p0 - n_in14p1;

// ScalarOp:8
	float n_out8p0 = n_out3p0 + n_out14p0;

// Output:0
	ALBEDO = n_out2p0;
	ALPHA = n_out8p0;
	EMISSION = n_out2p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -550, 23 )
nodes/fragment/2/node = SubResource( 5 )
nodes/fragment/2/position = Vector2( -300, 100 )
nodes/fragment/3/node = SubResource( 6 )
nodes/fragment/3/position = Vector2( -660, 220 )
nodes/fragment/4/node = SubResource( 7 )
nodes/fragment/4/position = Vector2( -800, 520 )
nodes/fragment/5/node = SubResource( 8 )
nodes/fragment/5/position = Vector2( -1300, 540 )
nodes/fragment/6/node = SubResource( 9 )
nodes/fragment/6/position = Vector2( -960, 480 )
nodes/fragment/8/node = SubResource( 10 )
nodes/fragment/8/position = Vector2( 40, 240 )
nodes/fragment/9/node = SubResource( 11 )
nodes/fragment/9/position = Vector2( -1120, 480 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -1300, 480 )
nodes/fragment/12/node = SubResource( 2 )
nodes/fragment/12/position = Vector2( -600, 460 )
nodes/fragment/13/node = SubResource( 3 )
nodes/fragment/13/position = Vector2( -420, 400 )
nodes/fragment/14/node = SubResource( 4 )
nodes/fragment/14/position = Vector2( -120, 420 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 6, 0, 4, 0, 2, 0, 0, 5, 5, 0, 9, 1, 10, 0, 9, 0, 9, 0, 6, 0, 8, 0, 0, 1, 3, 0, 8, 0, 4, 0, 12, 0, 12, 0, 13, 0, 13, 0, 14, 0, 14, 0, 8, 1 )

[sub_resource type="ShaderMaterial" id=13]
resource_local_to_scene = true
shader = SubResource( 12 )
shader_param/timeDelay = 0.0

[node name="Spatial" type="Spatial"]
script = ExtResource( 2 )

[node name="Arrow" parent="." instance=ExtResource( 1 )]

[node name="Cube" parent="Arrow" index="0"]
material/0 = SubResource( 13 )

[editable path="Arrow"]
